---
- hosts: all
  vars:
    deploy_user: deploy
    deploy_group: deploy
    server_domain: "helloworld.co.ke"
    ssh_port: 2222
    api_server_domain: "api.helloworld.co.ke"
    helloworld_root_domain: "helloworld.co.ke"
    helloworld_cert_domain: "www.helloworld.co.ke"
    deploy_user_home: /home/{{deploy_user}}
    lock_file_path: /tmp/ansible-playbook-frontend.lock
    force_ignore_lock: false
    setup_new_ssl_certs: false
  name: Deploy helloworld
  tags: ["helloworld_frontend"]
  pre_tasks:
    - user: name="{{deploy_user}}" groups=www-data,webapps,sudo state=present
      become: yes

    - stat: path={{lock_file_path}}
      register: lock_file

    - fail: msg="Sorry, someone is already running ansible. Add --force to your deploy command to forcefully continue deploying. This is useful if the previous deploy was aborted."
      when: lock_file.stat.exists|bool and not force_ignore_lock|bool

    - file: path={{lock_file_path}} state=absent
      become: yes
      when: "{{force_ignore_lock}}"

    - file: path={{lock_file_path}} state=touch
      become: yes

  post_tasks:
    - file: path={{lock_file_path}} state=absent
      become: yes

  roles:
    #- common
    #- nginx
    #- letsencrypt
    #- ufw
    - {
      role: helloworld_frontend_deploy,
      server_name: "{{server_domain}}",
      tags: ["helloworld_frontend"]
      }
